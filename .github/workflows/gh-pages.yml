# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: GitHub Pages CI

on:
  - push
  - pull_request

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-wechaty.js.org-${{ hashFiles('**/package.json', 'jekyll/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-wechaty.js.org-
      - name: Bundle Config
        run: |
          sudo gem install bundler
          bundle config path ~/.npm/bundle

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: NPM Install
        run: npm install
      - name: NPM Test
        run: |
          # Huan(202101): Only show unit tests that failed for easier debug
          set +e  # Execute all commands without exit on failure
          if ! npm test > /dev/null 2>&1; then
            2>/dev/null npm test  | grep '^not ok '
            1>/dev/null npm test
          fi
      - name: Install Dependencies
        run: make install
      - name: Build
        run: npm run build

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Deploy GitHub Pages
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-wechaty.js.org-${{ hashFiles('**/package.json', 'jekyll/Gemfile') }}
        restore-keys: |
          ${{ runner.os }}-wechaty.js.org-
    - name: Bundle Cache Config
      run: |
        sudo gem install bundler
        bundle config path ~/.npm/bundle

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Config Git
      run: |
        git config --global user.name 'Huan @ GitHub Action'
        git config --global user.email 'zixia@zixia.net'
    - name: Create orphan branch for gh-pages
      run: |
        git checkout --orphan gh-pages
        git reset --hard
        git commit --allow-empty -m "Orphan init"
        git checkout master
    - name: Install dependencies
      run: |
        make install
    - name: Bind git worktree with new-gh-pages folder and gh-pages branch
      run: |
        rm -fr new-gh-pages
        git worktree add new-gh-pages gh-pages
    - name: Build and copy all homepage files to new-gh-pages/ together
      run: |
        bash -x ./scripts/build-all.sh new-gh-pages
    - name: Deploy new-gh-pages
      run: |
        pushd new-gh-pages
        git add --all
        git commit -m "$(jq -r .version ../package.json)"
        git push -f origin gh-pages
        popd
    - name: Unbind new-gh-pages folder from gh-pages branch
      run: |
        git worktree remove new-gh-pages
        git branch -D gh-pages
        rm -fr new-gh-pages
